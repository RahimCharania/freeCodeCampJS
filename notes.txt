//Data types:

7 different:

undefined
null
boolean
string
symbol
number
object

//Variables:

Variables allow computers to store and manipulate data in a dynamic fashion. 
They do this by  using a "label" to point to the data rather than using the data itself. 
Any of the seven data types may be stored in a variable.

variable create or declare syntax:

var ourName;        //creates a variable called ourName


Note: Assignment always goes from right to left.


camelCase named variables are good practice.

Escaping Literal Quotes in Strings ==> use backslashes before the quotes ou don't want the sentence to end with.

//String values are immutable:

value of string can be changed but indivudal elements of a string cant be altered. Like we cant just change the first letter in a string by attempting to change the letter at that index.


Madlibs exercise is so extra LOL!


Access Multi-Dimensional Arrays With Indexes
Consider the following multi-dimensional array:

var arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]];
This is what it looks like in tabular form.

P 0	1	2	3
0	1	4	7	10
1	2	5	8	11
2	3	6	9	12
Now all you have to do, is choose the coordinates of the data you desire! For examples, 
if we want myNum to equal 8, thenâ€¦

var myNum = arr[2][1]; // Equal to 8

array-> .pop(remove last) and .shift(remove first)
.unshift(first element replace)


//functions

function myFunction(a,b)
{
console.log(a+b);
return (a+b);
}
myFunction(10,2)

//GLobal and local scope

In JavaScript, scope refers to the visibility of variables. 
Variables which are defined outside of a function block have Global scope. 
This means, they can be seen everywhere in your JavaScript code.

Variables which are used without the var keyword are automatically created in the global scope. 
This can create unintended consequences elsewhere in your code or when running a function again. 
You should always declare your variables with var.


//A function with no return statement, has an output of undefined. 
So, if you try to equal a varaible to the output of a function with no return statement, that variable will equal undefined.




having run a few sim tests i figure most of my error have been syntactical so far:
1. forgot to put semicolon at the end of a statement 
2. screwed up var name somehow



//QUeue
queue is an abstract Data Structure where items are kept in order
New items can be added at the back of the queue and old items are taken off from the front of the queue
